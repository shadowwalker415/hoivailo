import { Request, Response, NextFunction } from "express";

// const getErrorMessage = (error: unknown): string => {
//   return;
// };

export const unknownEndPoint = (_req: Request, res: Response) => {
  res.status(404).send({ error: "Unknown endpoint" });
};

// Handling errors generated by mongoose
export const databaseErrorHandler = (
  error: unknown,
  _req: Request,
  res: Response,
  next: NextFunction
) => {
  let message: string;
  if (
    error instanceof Error &&
    error.message.startsWith("E11000 duplicate key error collection")
  ) {
    message = "Appointment already exist";
    res.status(400).send({ error: message });
  } else if (
    error instanceof Error &&
    error.message.startsWith("Appointment validation failed")
  ) {
    message = "Name must be at least 3 characters long";
    res.status(400).send({ error: message });
  } else {
    next(error);
  }
};

// Handling all other errors
export const generalErrorHandler = (
  error: unknown,
  _req: Request,
  res: Response,
  next: NextFunction
) => {
  let message: string;
  if (error instanceof Error) {
    message = error.message;
    res.status(400).send({ error: message });
  } else {
    next(error);
  }
};
